{"version":3,"sources":["../src/converter.js"],"names":["mapping","Svg","Circle","Ellipse","G","Line","Path","Rect","Symbol","Text","Polygon","Polyline","LinearGradient","RadialGradient","Use","Defs","Stop","extractViewbox","markup","viewBox","attributes","Object","values","filter","attr","name","vbSplits","value","split","width","height","getCssRulesForAttr","cssRules","rules","idname","rule","selectors","indexOf","className","addNonCssAttributes","cssPropsResult","attrs","forEach","propertyName","cssProps","push","findApplicableCssProps","config","length","declarations","declaration","property","findId","id","find","traverse","i","nodeName","tagName","idName","omitById","includes","additionalProps","Elem","toLowerCase","children","childNodes","data","map","child","node","elemAttributes","k","Math","random","dom","cssAst","stylesheet","documentElement"],"mappings":"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","file":"converter.js","sourcesContent":["import React from 'react'\nimport camelCase from 'camelcase'\n\nimport Svg, {\n  Circle,\n  Ellipse,\n  G,\n  LinearGradient,\n  RadialGradient,\n  Line,\n  Path,\n  Polygon,\n  Polyline,\n  Rect,\n  Symbol,\n  Text,\n  Use,\n  Defs,\n  Stop\n} from 'react-native-svg'\n\nconst mapping = {\n  'svg': Svg,\n  'circle': Circle,\n  'ellipse': Ellipse,\n  'g': G,\n  'line': Line,\n  'path': Path,\n  'rect': Rect,\n  'symbol': Symbol,\n  'text': Text,\n  'polygon': Polygon,\n  'polyline': Polyline,\n  'linearGradient': LinearGradient,\n  'radialGradient': RadialGradient,\n  'use': Use,\n  'defs': Defs,\n  'stop': Stop\n}\n\nfunction extractViewbox (markup) {\n  const viewBox = markup.attributes\n    ? Object.values(markup.attributes)\n      .filter((attr) => attr.name === 'viewBox')[0]\n    : false\n\n  const vbSplits = viewBox ? viewBox.value.split(' ') : false\n  if (!vbSplits) {\n    return {}\n  }\n\n  return {\n    width: `${vbSplits[2]}`,\n    height: `${vbSplits[3]}`,\n    viewBox: viewBox.value\n  }\n}\n\nfunction getCssRulesForAttr (attr, cssRules) {\n  let rules = []\n  if (attr.name === 'id') {\n    const idname = '#' + attr.value\n\n    rules = cssRules.filter((rule) => {\n      if (rule.selectors.indexOf(idname) > -1) {\n        return true\n      } else {\n        return false\n      }\n    })\n  } else if (attr.name === 'class') {\n    const className = '.' + attr.value\n    rules = cssRules.filter((rule) => {\n      if (rule.selectors.indexOf(className) > -1) {\n        return true\n      } else {\n        return false\n      }\n    })\n  }\n\n  return rules\n}\n\nfunction addNonCssAttributes (markup, cssPropsResult) {\n  // again look at the attributes and pick up anything else that is not related to CSS\n  const attrs = []\n  Object.values(markup.attributes).forEach((attr) => {\n    if (!attr || !attr.name) {\n      return\n    }\n\n    const propertyName = camelCase(attr.name)\n    if (propertyName === 'class' || propertyName === 'id') {\n      return\n    }\n\n    if (cssPropsResult.cssProps.indexOf(propertyName) > -1) {\n      return\n    }\n\n    attrs.push({\n      name: propertyName,\n      value: `${attr.value}`\n    })\n  })\n\n  return attrs\n}\n\nfunction findApplicableCssProps (markup, config) {\n  const cssProps = []\n  const attrs = []\n  Object.values(markup.attributes).forEach((attr) => {\n    const rules = getCssRulesForAttr(attr, config.cssRules)\n    if (rules.length === 0) {\n      return\n    }\n\n    rules.forEach((rule) => {\n      rule.declarations.forEach((declaration) => {\n        const propertyName = camelCase(declaration.property)\n        attrs.push({\n          name: propertyName,\n          value: `${declaration.value}`\n        })\n        cssProps.push(propertyName)\n      })\n    })\n  })\n  return { cssProps, attrs }\n}\n\nfunction findId (markup) {\n  const id = Object.values(markup.attributes).find((attr) => attr.name === 'id')\n  return id && id.value\n}\n\nfunction traverse (markup, config, i = 0) {\n  if (!markup || !markup.nodeName || !markup.tagName) {\n    return null\n  }\n  const tagName = markup.nodeName\n  const idName = findId(markup)\n  if (idName && config.omitById && config.omitById.includes(idName)) {\n    return null\n  }\n\n  let attrs = []\n  if (tagName === 'svg') {\n    const viewBox = extractViewbox(markup)\n    attrs.push({\n      name: 'width',\n      value: config.width || viewBox.width\n    })\n    attrs.push({\n      name: 'height',\n      value: config.height || viewBox.height\n    })\n    attrs.push({\n      name: 'viewBox',\n      value: config.viewBox || viewBox.viewBox || '0 0 50 50'\n    })\n  } else {\n    // otherwise, if not SVG, check to see if there is CSS to apply.\n    const cssPropsResult = findApplicableCssProps(markup, config)\n    const additionalProps = addNonCssAttributes(markup, cssPropsResult)\n    // add to the known list of total attributes.\n    attrs = [...attrs, ...cssPropsResult.attrs, ...additionalProps]\n  }\n\n  // map the tag to an element.\n  const Elem = mapping[ tagName.toLowerCase() ]\n\n  // Note, if the element is not found it was not in the mapping.\n  if (!Elem) {\n    return null\n  }\n\n  const children = (Elem === Text && markup.childNodes.length === 1)\n    ? markup.childNodes[0].data\n    : markup.childNodes.length ? Object.values(markup.childNodes).map((child) => {\n      return traverse(child, config, ++i)\n    }).filter((node) => {\n      return !!node\n    }) : []\n\n  const elemAttributes = {}\n  attrs.forEach((attr) => {\n    elemAttributes[attr.name] = attr.value\n  })\n\n  const k = i + Math.random()\n  return <Elem {...elemAttributes} key={k}>{ children }</Elem>\n}\n\nexport { extractViewbox, getCssRulesForAttr, findApplicableCssProps, addNonCssAttributes }\n\nexport default (dom, cssAst, config) => {\n  config = Object.assign({}, config, {\n    cssRules: (cssAst && cssAst.stylesheet && cssAst.stylesheet.rules) || []\n  })\n  return traverse(dom.documentElement, config)\n}\n"]}