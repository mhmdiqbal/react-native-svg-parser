{"version":3,"sources":["../src/parser.js"],"names":["parseSvg","svgString","opts","DOMParser","parseFromString","makeCssAst","cssString","convertSvg","svgDom","cssAst","config","svgNodes"],"mappings":"0HAAA,8BACA,6C,yDACA,sC,sIAiBA,QAASA,SAAT,CAAmBC,SAAnB,CAA8BC,IAA9B,CAAoC,CAClC,MAAQ,IAAIC,kBAAJ,CAAcD,IAAd,CAAD,CACJE,eADI,CACYH,SADZ,CACuB,eADvB,CAAP,CAED,CAUD,QAASI,WAAT,CAAqBC,SAArB,CAAgC,CAC9B,GAAI,CAACA,SAAL,CAAgB,CACd,MAAO,KAAP,CACD,CACD,MAAO,2BAASA,SAAT,CAAP,CACD,CAUD,QAASC,WAAT,CAAqBC,MAArB,CAA6BC,MAA7B,CAAqCC,MAArC,CAA6C,CAC3C,MAAO,wBAAUF,MAAV,CAAkBC,MAAlB,CAA0BC,MAA1B,CAAP,CACD,C,QAEQV,Q,CAAAA,Q,SAAUK,U,CAAAA,U,SAAYE,U,CAAAA,U,iBAUhB,SAACN,SAAD,CAAYK,SAAZ,CAAuC,IAAhBI,OAAgB,2DAAP,EAAO,CACpD,GAAMC,UAAWJ,WACfP,SAASC,SAAT,CAAoBS,OAAOP,SAAP,EAAoB,EAAxC,CADe,CAEfE,WAAWC,SAAX,CAFe,CAGfI,MAHe,CAAjB,CAKA,MAAOC,SAAP,CACD,C","file":"parser.js","sourcesContent":["import { DOMParser } from 'xmldom'\nimport cssParse from 'css-parse-no-fs'\nimport converter from './converter'\n\n/**\n * 2nd argument can be a set of config elements passed to domParser e.g.:\n * {\n *    domParser: {\n *      errorHandler: {\n *        warning: function(w){console.warn(w)}\n *      }\n *    }\n * }\n * This defaults to empty object. Check this link for options you can pass:\n * https://github.com/jindw/xmldom#api-reference\n *\n * @param String svgString\n * @param Object param1\n */\nfunction parseSvg (svgString, opts) {\n  return (new DOMParser(opts))\n    .parseFromString(svgString, 'image/svg+xml')\n}\n\n/**\n * Takes in a string and returns CSS AST\n *\n * This is the parse method of this library:\n * https://github.com/reworkcss/css#api\n *\n * @param String cssString\n */\nfunction makeCssAst (cssString) {\n  if (!cssString) {\n    return null\n  }\n  return cssParse(cssString)\n}\n\n/**\n *\n * Returns SVG object from a dom + config params\n *\n * @param Element svgDom\n * @param CssAst cssAst\n * @param Object config\n */\nfunction convertSvg (svgDom, cssAst, config) {\n  return converter(svgDom, cssAst, config)\n}\n\nexport { parseSvg, makeCssAst, convertSvg }\n\n/**\n * svgString is an XML SVG string\n *\n * config should include width, height, and css, as an optional param which is a CSS stylesheet as a string.\n *\n * @param String svgString\n * @param Object config\n */\nexport default (svgString, cssString, config = {}) => {\n  const svgNodes = convertSvg(\n    parseSvg(svgString, config.DOMParser || {}),\n    makeCssAst(cssString),\n    config\n  )\n  return svgNodes\n}\n"]}